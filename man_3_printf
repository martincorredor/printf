.TH _PRINTF 1 "17/3/2020" Version "_PRINTF MAN PAGE"
.SH NAME
.B _printf
- _print or display assigned data.
.SH SYNOPSIS
.PP
.b _printf - FORMAT [ARGUMENT]...
.PP
.b _printf - Options.
.PP
#include "holberton.h"
.PP
int _printf(const char *format, ...);
.PP
int selector(int *i, const char *format, va_list x);
.PP
int op_percent(va_list _attribute_((unused)) p);
.PP
int op_char(va_list p);
.PP
int op_string(va_list p);
.PP
int op_numbers(va_list arg);
.PP
int op_unsigned(va_list arg);
.PP
int print_rev(va_list p);
.PP
int rot13(va_list p);
.PP
int _putchar(char c);
.PP
.SH RETURN VALUE
Upon successful return, these functions return the number of characters printed (excluding
the null byte used to end output to strings).

.SH DESCRIPTION
.PP
prints data and arguments according to the stipulated format and are executed acco\
rding to the established options or Printf
.SH
 --help - with printf followed by --help you can see the display help options.
.SH
 --version - printf followed by --version you can see printf versions and outputs
.SH
 -tag -width -indent
.SH 
 " - double quote.
.PP
 % - a single %
.PP
 %b - argument as a string with '\\' escapes interpreted
.PP
 0 - pad with zeros to the left up to the value given by the previous flag.
.PP
 + - print the sign of a number
.PP
 There are different types of flags that are used when you want to print with print\
f, they are used when making an assignment, as we will see below:
.PP
 %d , %i - print a number "%d" referring to a decimal number or "%i" to an integer,\
 both are integer type assignments.
.PP
 %c - print characters
.PP
 %s - print the string
.PP
 %u - base 10 integer
.PP
.SH FORMAT
The format string is a character string, beginning and ending in its initial shift state,
if any. The format string is composed of zero or more directives: ordinary characters 
(not %), which are copied unchanged to the output stream; and conversion specifications,
each of which results in fetching zero or more subsequent arguments.
.PP
.SH EXAMPLES
.PP
 With main.c we can test our functions:
.PP
#include "holberton.h"
.PP
.PP
_printf("decimal: %d\n", 10000);
.PP
Output: decimal: 10000
.PP
_printf("char: %c\n", 'H');
.PP
Output: char: H
.PP
_printf("string %s\n", "Hi guy !");
.PP
Output: string Hi guy !
.PP
_printf("integer: %i\n", 26);
.PP
Output: integer: 26
.PP
_printf("Percent:[%%]\n");
.PP
Output: Percent:[%]
.PP
.SH BUGS
Unknown
.PP

.SH AUTHORS
Written by:
.PP
-Alison Quintero.
.PP
-Christian Bedoya.
.PP
-Angie Perez.

.Th 
